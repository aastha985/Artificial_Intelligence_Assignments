# -*- coding: utf-8 -*-
"""Code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bFwvCbL5zWgLatgTC0iwGpN0-7g5KIgF

# Installing and Importing Modules
"""

!pip install durable-rules

from durable.lang import *

"""# Taking Inputs"""

def input_cse():
  cgpa = float(input("Please enter your cgpa: "))
  btp = input("Are you pursuing a btp in cse? (y/n) ")
  published_papers = input("Have you published any papers in Computer Science and related fields? ")
  ai = input("Do you have interest in Data Science? (y/n) ")
  print("\n--------------Career Options-----------------------")

  if cgpa>=8 and btp=='y':
    assert_fact('field',{'code': 'cse','cgpa':cgpa,'btp':btp})
  if cgpa>=9 and published_papers=='y':
    assert_fact('field',{'code': 'cse','cgpa':cgpa, 'published_papers': 'y'})
  if ai=='y':
    assert_fact('field',{'code':'cse', 'area': 'ai'})
  else:
    assert_fact('field',{'code':'cse', 'area': 'noai'})

def input_math():
  eco = input("Are you pursuing a minor in economics? (y/n) ")
  print("\n--------------Career Options-----------------------")

  if eco=='y':
    assert_fact('field',{'code': 'maths', 'area': 'eco'})
  else:
    assert_fact('field',{'code': 'maths', 'area': 'noeco'})

def input_des_ssh(code):
  extra = input("Are you pursuing any extracurricular activity? (sports/startup/none) ")
  print("\n--------------Career Options-----------------------")
  assert_fact('field',{'code': code,'extra': extra})

def run():
  code = input("Please enter the field you have done most courses in? (cse/maths/design/ssh) ")

  if code=='cse':
    input_cse()
  elif code=='maths':
    input_math()
  else:
    input_des_ssh(code)

"""# Forward Chaining"""

with ruleset("field"):
  @when_all((m.code=="cse") & (m.cgpa>=8) & (m.btp=='y'))
  def suggest_difficult_career(c):
    c.assert_fact('preferences',{'type_': 'difficult'})

  @when_all((m.code=="cse") & (m.cgpa>=9) & (m.published_papers=='y'))
  def suggest_research_career(c):
    c.assert_fact('preferences',{'type_': 'research'})

  @when_all((m.code=="cse") & (m.area=="ai"))
  def suggest_career(c):
    c.assert_fact({'career': 'Software Engineer'})
    c.assert_fact({'career': 'Web Developer'})
    c.assert_fact('interest',{'area': "ai"})

  @when_all((m.code=="cse") & (m.area=="noai"))
  def suggest_career(c):
    c.assert_fact({'career': 'Software Engineer'})
    c.assert_fact({'career': 'Web Developer'})
  
  @when_all((m.code=="maths") & (m.area=="eco"))
  def suggest_career(c):
    c.assert_fact({'career': 'Statistical Researcher'})
    c.assert_fact({'career': 'Mathematics Teacher'})
    c.assert_fact('interest',{'area':'eco'})

  @when_all((m.code=="maths") & (m.area=="noeco"))
  def suggest_career(c):
    c.assert_fact({'career': 'Statistical Researcher'})
    c.assert_fact({'career': 'Mathematics Teacher'})

  @when_all((m.code=="design") & (m.extra=="startup"))
  def suggest_career(c):
    c.assert_fact({'career': 'Product Designer'})
    c.assert_fact({'career': 'Web Designer'})
    c.assert_fact('extracurricular',{'extra': "startup"})

  @when_all((m.code=="design") & (m.extra=="sports"))
  def suggest_career(c):
    c.assert_fact({'career': 'Product Designer'})
    c.assert_fact({'career': 'Web Designer'})
    c.assert_fact('extracurricular',{'extra': "sports"})

  @when_all((m.code=="design") & (m.extra=="none"))
  def suggest_career(c):
    c.assert_fact({'career': 'Product Designer'})
    c.assert_fact({'career': 'Web Designer'})
  
  @when_all((m.code=="ssh") & (m.extra=="startup"))
  def suggest_career(c):
    c.assert_fact({'career': 'Consultant'})
    c.assert_fact('extracurricular',{'extra': "startup"})

  @when_all((m.code=="ssh") & (m.extra=="sports"))
  def suggest_career(c):
    c.assert_fact({'career': 'Consultant'})
    c.assert_fact('extracurricular',{'extra': "sports"})
  
  @when_all((m.code=="ssh") & (m.extra=="none"))
  def suggest_career(c):
    c.assert_fact({'career': 'Consultant'})
    c.assert_fact('extracurricular',{'extra': "sports"})

  @when_all(+m.career)
  def output(c):
    print('You can pursue a career as {0}'.format(c.m.career))

with ruleset("extracurricular"):
  @when_all((m.extra=="startup"))
  def suggest_startup_career(c):
    c.assert_fact({'career': "Enterpreneur"})

  @when_all((m.extra=="sports"))
  def suggest_sports_career(c):
    c.assert_fact({'career': "Sportsperson"})

  @when_all(+m.career)
  def output(c):
    print('You can pursue a career as {0}'.format(c.m.career))

with ruleset("interest"):
  @when_all((m.area=="ai"))
  def suggest_ai_career(c):
    c.assert_fact({'career':'Data Scientist'})
    c.assert_fact({'career':'Machine Learning Engineer'})

  @when_all((m.area=="eco"))
  def suggest_eco_careers(c):
    c.assert_fact({'career':'Financial Analyst'})

  @when_all(+m.career)
  def output(c):
    print('You can pursue a career as {0}'.format(c.m.career))

with ruleset("preferences"):
  @when_all(m.type_=="difficult")
  def suggest_difficult_career_paths(c):
    c.assert_fact({'career': 'DevOps Engineer'})
    c.assert_fact({'career': 'Security Engineer'})

  @when_all(m.type_=='research')
  def suggest_research_career(c):
    c.assert_fact({'career': 'Researcher'})

  @when_all(+m.career)
  def output(c):
    print('You can pursue a career as {0}'.format(c.m.career))

"""# Running the program"""

run()